services:
  bot: 
    build: 
      context: . 
      dockerfile: Dockerfile
    container_name: telegram-bot
    restart: always
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
      - DATABASE_URL=${DATABASE_URL}
      - PYTHONUNBUFFERED=1
      - API_KEY=${API_KEY}
    
      
    command: python bot.py
    volumes:
      - ./bot.py:/app/bot.py
  db:
    image: postgres:15
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER} # Пользователь для PostgreSQL
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # Пароль для PostgreSQL
      POSTGRES_DB: ${POSTGRES_DB} # Имя базы данных
    ports:
      - "5433:5432" # Прокси порта PostgreSQL
    volumes:
      - postgres_data:/var/lib/postgresql/data # Данные базы данных
      
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL} # Email для доступа к PGAdmin
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD} # Пароль для PGAdmin
    ports:
      - "5050:80" # Прокси порта PGAdmin
    depends_on:
      - db
volumes:
  postgres_data: